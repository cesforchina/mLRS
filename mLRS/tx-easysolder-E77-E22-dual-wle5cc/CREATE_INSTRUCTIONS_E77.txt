For some of the steps it is important to do them in the correct sequence. So it is best to just follow all steps exactly as given below.
Quotation marks, "", are used to enclose text, but should never be entered.


## I. Create Target: Cube MX ##

These steps are very targets dependent. Pay attention to the details.


1. File -> New -> STM32 Project

opens "Target Selection" dialog (note: this can take a while, be patient)


2. MCU/MPU Selector -> Commercial Part Number: enter STM32WLE5CC (the part depends on the specific project) 

choose STM32WLE5CCU6 (doesn't actually matter which of the "CC's")

hit Next

opens "Project & Options" dialog


3. Project -> Project Name: enter rx-diy-E77-E22-dual-wle5cc (the name depends on the specific project)
   Options -> Targeted Language: choose C++

hit Finish

opens CubeMX "Pinout & Configuration" page (inside CubeIDE)


4. Pinout & Configuration -> System Core -> SYS -> Timebase Source: select SysTick
   Pinout & Configuration -> System Core -> RCC -> High Speed Clock (HSE): select "Crystal/Ceramic Resonator"
   Pinout & Configuration -> Trace and Debug -> DEBUG -> JTAG and Trace: select "Serial Wire"


5. Clock Configuration -> Input frequency: enter 32
   Clock Configuration -> select check buttons such that HSE & PLLCLK is selected for SYSCLK
   Clock Configuration -> HCLK1 (Mhz): enter 48


6. Project Manager -> Project -> Linker Settings -> Minimum Heap Size: change to 0x0
   Project Manager -> Code Generator -> Generated files: un-check "Delete previously generated files when not re-generated"
   Project Manager -> Advanced Settings -> Driver Selector -> GPIO: select LL

hit Save or Save All
acknowledge all dialogs with yes
main.c should be opened in editor now


## II. Create Target: Mangle Files ##

These steps are largely equal for all targets (note: main.cpp may need target specific entries).


7. in the IDE Project explorer: unfold "Core", unfold "Src", right-mouse click main.c -> Rename 

opens "Rename Resource" dialog

  -> New name: change to main.cpp

hit ok


8. double click on main.cpp to open file in editor

  -> find section "/* USER CODE BEGIN PFP */"
     insert "int main_main();"

  -> find section "/* USER CODE BEGIN 2 */"
     insert "  return main_main();"


9. go to "Tools" folder in the mlrs folder

  -> run run_copy_st_drivers.py


## III. Create Target: IDE Config ##

These steps are equal for all targets.

10. hammer icon -> down arrow: select Release

this starts the compiler, let it run, don't worry about the errors which result


11. right-mouse click on newly created target (e.g. "rx-diy-WioE5-E22-dual-wle5j") -> New -> Folder

opens New Folder/Folder dialog

  -> Advanced
  -> check "Link to alternate folder (Linked Folder)"
  -> hit "Browse"

opens select folder dialog

  -> select folder "Common" and accept
  -> hit Finish

should add a folder "Common" to the project

repeat for "CommonRx" or "CommonTx", depending on whether it's a rx or tx target
repeat for "modules"


12. right-mouse click on "Common" -> Properties

opens "Properties for Common" dialog

  -> C/C++ Build -> Settings: uncheck "Exclude resource from build"
  -> hit "Apply and Close"

repeat for "CommonRx" or "CommonTx", depending on whether it's a rx or tx target
repeat for "modules"


13. unfold "modules" folder, to see "fastmavlink", "mavlink", "stm32ll-lib", "sx12xx-lib"

right-mouse click on "fastmavlink" -> Properties

opens "Properties for fastmavlink" dialog

  -> C/C++ Build -> Settings: check "Exclude resource from build"

hit "Apply and Close"

repeat for "mavlink"


## IV. Create Target: Target HAL ##

These steps are equal for all targets, except of course that different values need to be entered.


14. in the IDE, unfold "Common", unfold "hal"

  -> double-click device_conf.h to open it in editor
  -> enter new target in appropriate place, with define e.g. RX_DIY_WIOE5_E22_WLE5JC

  -> double-click hal.h to open it in editor
  -> enter new target in appropriate place, with define e.g. RX_DIY_WIOE5_E22_WLE5JC, rx-hal-dio-wioe5-e22-wle5jc.h


15. create decvice hal file, e.g. rx-hal-dio-wioe5-e22-wle5jc.h, with appropriate entries


16. right-mouse click created target (e.g. "tx-diy-WioE5-E22-dual-wle5jc") -> Properties

opens "Properties for rx-diy-WioE5-E22-dual-wle5jc" dialog

  -> C/C++ Build -> Settings -> Tool Settings -> MCU G++ Compiler -> Preprozessor -> Define Symbols -> "+" icon: add e.g. RX_DIY_WIOE5_E22_WLE5JC
    
hit "Apply and Close"


## V. Create Target: Finalize ##

The project should compile now without errors, and only "intentional" warnings. A last step is needed.


17. close STM32CubeIDE, go to "Tools" folder in the mlrs folder

  -> run run_replace_names_by_variables.py


